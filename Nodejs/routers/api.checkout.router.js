// const express = require('express');
// const router = express.Router();

// const { log } = require('node:console');
// const ketnoi = require('../connect-mysql');
// const util = require('node:util');
// const query = util.promisify(ketnoi.query).bind(ketnoi);;

// // POST /api/checkout
// router.post('/createbill', async (req, res) => {
//   console.log(req.body);
//   const bill = req.body.bill;
//   const billDetails = req.body.billDetails;

//   try {
//     // Ch√®n h√≥a ƒë∆°n
//     bill.bill_date = new Date(bill.bill_date).toISOString().slice(0, 19).replace('T', ' ');
//     const result = await query('INSERT INTO bill SET ?', bill);
//     const bill_id = result.insertId; // Gi·∫£ s·ª≠ tr·∫£ v·ªÅ ID c·ªßa h√≥a ƒë∆°n v·ª´a ch√®n

//     // Th√™m bill_id v√†o m·ªói chi ti·∫øt h√≥a ƒë∆°n
//     const billDetailsWithBillId = billDetails.map(detail => ({
//       ...detail,
//       bill_id
//     }));

//     // Ch√®n c√°c chi ti·∫øt h√≥a ƒë∆°n
//     await query('INSERT INTO bill_detail (bill_id, product_id, quantity, price, subtotal) VALUES ?', 
//       [billDetailsWithBillId.map(detail => [detail.bill_id, detail.product_id, detail.quantity, detail.price, detail.subtotal])]);

//     res.status(201).json({ message: 'ƒê·∫∑t h√†ng th√†nh c√¥ng!' });
//   } catch (error) {
//     console.error('Error inserting bill:', error);
//     res.status(500).json({ error: 'ƒê√£ x·∫£y ra l·ªói khi ƒë·∫∑t h√†ng.' });
//   }
// });

// module.exports = router;
const express = require('express');
const router = express.Router();
const nodemailer = require('nodemailer');
const util = require('util');
const ketnoi = require('../connect-mysql');
const query = util.promisify(ketnoi.query).bind(ketnoi);

// Thi·∫øt l·∫≠p transporter cho nodemailer
const transporter = nodemailer.createTransport({
  service: 'gmail', // ho·∫∑c b·∫•t k·ª≥ d·ªãch v·ª• email n√†o b·∫°n mu·ªën s·ª≠ d·ª•ng
  host: "smtp.ethereal.email",
  port: 587,
  secure: false,
  auth: {
    user: 'buihaihiep15042002@gmail.com',
    pass: 'nhld chzz zzot gwbv'
  }
});
router.post('/createbill', async (req, res) => {
  console.log(req.body);
  const bill = req.body.bill;
  const billDetails = req.body.billDetails;

  try {
    // Ch√®n h√≥a ƒë∆°n
    bill.bill_date = new Date(bill.bill_date).toISOString().slice(0, 19).replace('T', ' ');
    const result = await query('INSERT INTO bill SET ?', bill);
    const bill_id = result.insertId; // Gi·∫£ s·ª≠ tr·∫£ v·ªÅ ID c·ªßa h√≥a ƒë∆°n v·ª´a ch√®n
    const total_amount = bill.total_amount;

    // Th√™m bill_id v√†o m·ªói chi ti·∫øt h√≥a ƒë∆°n
    const billDetailsWithBillId = billDetails.map(detail => ({
      ...detail,
      bill_id
    }));

    // Ch√®n c√°c chi ti·∫øt h√≥a ƒë∆°n
    await query('INSERT INTO bill_detail (bill_id, product_id, quantity, price, subtotal) VALUES ?', 
  [billDetailsWithBillId.map(detail => [detail.bill_id, detail.product_id, detail.quantity, detail.price, detail.subtotal])]);

for (const detail of billDetails) {
  await query('UPDATE detail_product SET quantity = quantity - ? WHERE product_id = ?', [detail.quantity, detail.product_id]);
  
  // Ki·ªÉm tra n·∫øu s·ªë l∆∞·ª£ng s·∫£n ph·∫©m b·∫±ng 0 th√¨ c·∫≠p nh·∫≠t tr·∫°ng th√°i v·ªÅ 0
  await query('UPDATE detail_product SET status = 0 WHERE product_id = ? AND quantity = 0', [detail.product_id]);
}
    // Truy v·∫•n th√¥ng tin chi ti·∫øt ƒë·ªÉ g·ª≠i email
    const [account] = await query('SELECT account_name, email FROM account WHERE account_id = ?', [bill.account_id]);
    const products = await query(
      'SELECT p.product_name, bd.quantity, bd.price, bd.subtotal FROM bill_detail bd JOIN detail_product p ON bd.product_id = p.product_id WHERE bd.bill_id = ?',
      [bill_id]
    );

    // T·∫°o n·ªôi dung email
    // const mailOptions = {
    //   from: '"Furni. üëª" <buihaihiep15042002@gmail.com>',
    //   to: account.email,
    //   subject: 'Th√¥ng tin ƒë∆°n h√†ng c·ªßa b·∫°n',
    //   html: `
    //     <p>c·∫£m ∆°n b·∫°n ƒë√£ l·ª±a ch·ªçn c·ª≠a h√†ng Furni ƒë·ªÉ s·ª≠ d·ª•ng d·ªãch v·ª•.Sau ƒë√¢y l√† th√¥ng tin chi ti·∫øt ƒë∆°n h√†ng c·ªßa b·∫°n:</p>
    //     <h1>Th√¥ng tin ƒë∆°n h√†ng</h1>
    //     <p>M√£ ƒë∆°n h√†ng: ${bill_id}</p>
    //     <p>Ng∆∞·ªùi ƒë·∫∑t: ${account.account_name}</p>
    //     <p>Ng√†y ƒë·∫∑t: ${bill.bill_date}</p>
    //     <p>T·ªïng s·ªë ti·ªÅn: ${bill.total_amount}</p>
    //     <p>Ph∆∞∆°ng th·ª©c thanh to√°n: ${bill.payment_method}</p>
    //     <p>Tr·∫°ng th√°i: ${bill.status}</p>
    //     <h2>Chi ti·∫øt s·∫£n ph·∫©m</h2>
    //     <ul>
    //       ${products.map(product => `
    //         <li>
    //           <p>T√™n s·∫£n ph·∫©m: ${product.product_name}</p>
    //           <p>S·ªë l∆∞·ª£ng: ${product.quantity}</p>
    //           <p>Gi√°: ${product.price}</p>
    //           <p>T·ªïng c·ªông: ${product.subtotal}</p>
    //         </li>
    //       `).join('')}
    //     </ul>
    //     <p>ch√∫c b·∫°n m·ªôt ng√†y vui v·∫ª v√† ƒë·ª´ng qu√™n ph·∫£n h·ªìi l·∫°i cho Furni nh√©!</p>
    //   `
    // };

    // // G·ª≠i email
    // await transporter.sendMail(mailOptions);

    res.status(201).json({ message: 'ƒê·∫∑t h√†ng th√†nh c√¥ng v√† email ƒë√£ ƒë∆∞·ª£c g·ª≠i!' ,bill_id,total_amount});
  } catch (error) {
    console.error('Error inserting bill:', error);
    res.status(500).json({ error: 'ƒê√£ x·∫£y ra l·ªói khi ƒë·∫∑t h√†ng.' });
  }
});

module.exports = router;
